/* eslint-disable @typescript-eslint/no-non-null-assertion */
import { ChainId } from '@surge/sdk-core';
import { AVAX_XRPL_EVM_TESTNET, AXL_XRPL_EVM_TESTNET, BNB_XRPL_EVM_TESTNET, DAI_ARBITRUM_SEPOLIA, DAI_XRPL_EVM_TESTNET, MATIC_XRPL_EVM_TESTNET, RLUSD_XRPL_EVM_TESTNET, SOL_XRPL_EVM_TESTNET, TON_XRPL_EVM_TESTNET, TRON_XRPL_EVM_TESTNET, USDC_ARBITRUM_SEPOLIA, USDC_XRPL_EVM_TESTNET, USDT_XRPL_EVM_TESTNET, WETH_XRPL_EVM_TESTNET, } from '../../providers/token-provider';
import { WRAPPED_NATIVE_CURRENCY } from '../../util/chains';
export const BASES_TO_CHECK_TRADES_AGAINST = () => {
    return {
        [ChainId.XRPL_EVM_TESTNET]: [
            WRAPPED_NATIVE_CURRENCY[ChainId.XRPL_EVM_TESTNET],
            DAI_XRPL_EVM_TESTNET,
            USDC_XRPL_EVM_TESTNET,
            USDT_XRPL_EVM_TESTNET,
            BNB_XRPL_EVM_TESTNET,
            AVAX_XRPL_EVM_TESTNET,
            MATIC_XRPL_EVM_TESTNET,
            RLUSD_XRPL_EVM_TESTNET,
            SOL_XRPL_EVM_TESTNET,
            TON_XRPL_EVM_TESTNET,
            TRON_XRPL_EVM_TESTNET,
            AXL_XRPL_EVM_TESTNET,
            WETH_XRPL_EVM_TESTNET,
        ],
        [ChainId.ARBITRUM_SEPOLIA]: [
            WRAPPED_NATIVE_CURRENCY[ChainId.ARBITRUM_SEPOLIA],
            DAI_ARBITRUM_SEPOLIA,
            USDC_ARBITRUM_SEPOLIA,
        ],
    };
};
export const ADDITIONAL_BASES = async () => {
    return {
    // No additional bases for supported chains
    };
};
/**
 * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these
 * tokens.
 */
export const CUSTOM_BASES = async () => {
    return {
    // No custom bases for supported chains
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcm91dGVycy9sZWdhY3ktcm91dGVyL2Jhc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZEQUE2RDtBQUM3RCxPQUFPLEVBQUUsT0FBTyxFQUFTLE1BQU0saUJBQWlCLENBQUM7QUFFakQsT0FBTyxFQUNMLHFCQUFxQixFQUNyQixvQkFBb0IsRUFDcEIsb0JBQW9CLEVBQ3BCLG9CQUFvQixFQUNwQixvQkFBb0IsRUFDcEIsc0JBQXNCLEVBQ3RCLHNCQUFzQixFQUN0QixvQkFBb0IsRUFDcEIsb0JBQW9CLEVBQ3BCLHFCQUFxQixFQUNyQixxQkFBcUIsRUFDckIscUJBQXFCLEVBQ3JCLHFCQUFxQixFQUNyQixxQkFBcUIsR0FDdEIsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN4QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQU01RCxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBRyxHQUFtQixFQUFFO0lBQ2hFLE9BQU87UUFDTCxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFO1lBQzFCLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBRTtZQUNsRCxvQkFBb0I7WUFDcEIscUJBQXFCO1lBQ3JCLHFCQUFxQjtZQUNyQixvQkFBb0I7WUFDcEIscUJBQXFCO1lBQ3JCLHNCQUFzQjtZQUN0QixzQkFBc0I7WUFDdEIsb0JBQW9CO1lBQ3BCLG9CQUFvQjtZQUNwQixxQkFBcUI7WUFDckIsb0JBQW9CO1lBQ3BCLHFCQUFxQjtTQUN0QjtRQUNELENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLEVBQUU7WUFDMUIsdUJBQXVCLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFFO1lBQ2xELG9CQUFvQjtZQUNwQixxQkFBcUI7U0FDdEI7S0FDRixDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsS0FBSyxJQUVsQyxFQUFFO0lBQ0gsT0FBTztJQUNMLDJDQUEyQztLQUM1QyxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRUY7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLEtBQUssSUFFOUIsRUFBRTtJQUNILE9BQU87SUFDTCx1Q0FBdUM7S0FDeEMsQ0FBQztBQUNKLENBQUMsQ0FBQyJ9